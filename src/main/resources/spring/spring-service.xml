<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd">

    <import resource="classpath:spring/spring-mapper.xml" />
    <!--AOP配置:SpringAOP配置声明式事务
            aop:advisor:
            切面
            事务的传播特性
        -->
    <!--
       事务的传播特性
       1、事务的特征 ACID
       原子性
       一致性
       持久性
       隔离性:不同事务互不干扰
           脏读
           幻读
           不可重复读
          ==>隔离级别
               读未提交
               读已提交:脏读
               可重复读:脏读、不重复读    mysql默认的隔离级别
               串行化

       2、事务的传播特性   PROPAGATION
       事务与事务之间可能会存在传播行为的特征
       有七个级别
           1、PROPAGATION_REQUIRED：默认事务类型，如果没有，就新建一个事务；如果有，就加入当前事务。适合绝大多数情况。

           2、PROPAGATION_REQUIRES_NEW：如果没有，就新建一个事务；如果有，就将当前事务挂起。

            3、PROPAGATION_NESTED：如果没有，就新建一个事务；如果有，就在当前事务中嵌套其他事务。

           4、PROPAGATION_SUPPORTS：如果没有，就以非事务方式执行；如果有，就使用当前事务。

           5、PROPAGATION_NOT_SUPPORTED：如果没有，就以非事务方式执行；如果有，就将当前事务挂起。即无论如何不支持事务。

           6、PROPAGATION_NEVER：如果没有，就以非事务方式执行；如果有，就抛出异常。

           7、PROPAGATION_MANDATORY：如果没有，就抛出异常；如果有，就使用当前事务。
   -->

    <!--事务管理器:bean-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <aop:config>
        <aop:pointcut id="pointcut"
                      expression="execution(* com.ma.ssm.service.*.*(..))" />

        <aop:advisor advice-ref="trAdvice" pointcut-ref="pointcut" />

    </aop:config>
    <tx:advice id="trAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="call*" propagation="REQUIRED" />
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--用于在类上添加注释 简化了配置文件的编写 但必须在类上加注释<tx:annotation-driven transaction-manager="transactionManager" />-->




</beans>